(function(){
  var comments = atob('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');

  var input = new Uint8Array(comments.length);
  for (var i = 0; i < comments.length; i++) { input[i] = comments.charCodeAt(i);}
  var output = pako.inflate(input,{ to: 'string' });
  window.g_commentLoader.onLoad(JSON.parse(output));
})();