(function(){
  var comments = atob('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');

  var input = new Uint8Array(comments.length);
  for (var i = 0; i < comments.length; i++) { input[i] = comments.charCodeAt(i);}
  var output = pako.inflate(input,{ to: 'string' });
  window.g_commentLoader.onLoad(JSON.parse(output));
})();