(function(){
  var comments = atob('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');

  var input = new Uint8Array(comments.length);
  for (var i = 0; i < comments.length; i++) { input[i] = comments.charCodeAt(i);}
  var output = pako.inflate(input,{ to: 'string' });
  window.g_commentLoader.onLoad(JSON.parse(output));
})();